// This file is auto-generated by @hey-api/openapi-ts

export type ActionCreate = {
    serial_number: number;
    action_type: string;
    status_code?: ModelsActionsActionStatus | null;
    payload?: {
        [key: string]: unknown;
    } | null;
};

export type ActionPrefrences = {
    fail_fast?: boolean | null;
};

export type ActionRead = {
    id: string;
    created_at: string;
    updated_at: string;
    scenario_id: string;
    payload?: {
        [key: string]: unknown;
    } | null;
    action_type: string;
    content?: {
        [key: string]: unknown;
    } | null;
    status_code?: ModelsActionsActionStatus;
    error?: string | null;
};

export type ActionResponseInput = {
    id?: string;
    status: ModelsOperatorActivityActionsActionStatusActionStatus;
    type: 'send_message' | 'send_bulk_messages' | 'join_group' | 'leave_group' | 'reply_to_message' | 'forward_message' | 'behavioural';
    content: SendMessageResponseContentInput | ReplyToMessageResponseContentInput | LeaveGroupResponseContent | JoinGroupResponseContentInput | ForwardMessageResponseContentInput | BehaviouralResponseContentInput | SendBulkMessagesResponseContentInput | null;
    start_time: string;
};

export type ActionResponseOutput = {
    id?: string;
    status: ModelsOperatorActivityActionsActionStatusActionStatus;
    type: 'send_message' | 'send_bulk_messages' | 'join_group' | 'leave_group' | 'reply_to_message' | 'forward_message' | 'behavioural';
    content: SendMessageResponseContentOutput | ReplyToMessageResponseContentOutput | LeaveGroupResponseContent | JoinGroupResponseContentOutput | ForwardMessageResponseContentOutput | BehaviouralResponseContentOutput | SendBulkMessagesResponseContentOutput | null;
    start_time: string;
};

export type ActionStatusCode = 'success' | 'failed' | 'cancelled';

export type ActionStatusUpdate = {
    status_code: ModelsActionsActionStatus;
    content?: {
        [key: string]: unknown;
    } | null;
    error?: string | null;
};

export type AddManyCharactersToCategoryRequest = {
    character_ids: Array<string>;
    remove_others?: boolean;
};

export type AddManyChatsToCategoryRequest = {
    chat_ids: Array<string>;
    remove_others?: boolean;
};

export type AllocateProfilesGroupsMissionInput = {
    characters_categories?: Array<string> | null;
    chat_categories?: Array<string> | null;
    diversify_chats?: boolean | null;
    start_time?: string | null;
    end_time?: string | null;
    /**
     * Stop planning after this amount of seconds
     */
    planning_timeout?: number | null;
    batch_size?: number | null;
    batch_interval?: number | null;
};

export type Attachment = {
    url: string;
    name?: string | null;
    mime_type?: string | null;
};

export type BehaviouralAction = {
    id?: string;
    type?: 'send_message' | 'send_bulk_messages' | 'join_group' | 'leave_group' | 'reply_to_message' | 'forward_message' | 'behavioural';
    prefrences?: ActionPrefrences;
    args: BehaviouralArgs;
};

export type BehaviouralArgs = {
    wait_time?: number;
    sync_context?: boolean;
    get_chats?: boolean;
    sync_personal_details?: boolean;
    disable_auto_download_media?: boolean;
    delete_all_active_sessions?: boolean;
};

export type BehaviouralResponseContentInput = {
    current_context?: unknown | null;
    chats?: Array<GroupInfo | ChannelInfo> | null;
    personal_details_synced?: boolean;
    auto_download_media_disabled?: boolean;
    all_active_sessions_deleted?: boolean;
};

export type BehaviouralResponseContentOutput = {
    current_context?: unknown | null;
    chats?: Array<GroupInfo | ChannelInfo> | null;
    personal_details_synced?: boolean;
    auto_download_media_disabled?: boolean;
    all_active_sessions_deleted?: boolean;
};

export type BodyCreateChatsFromCsvChatsFromCsvPost = {
    file: Blob | File;
};

export type CategoryCreate = {
    name?: string;
    description?: string;
    parent_id?: string | null;
};

export type CategoryNodePayload = {
    id: string;
    name: string;
    description: string;
    chats_count: number | null;
    characters_count: number | null;
};

export type CategoryRead = {
    id: string;
    created_at: string;
    updated_at: string;
    name?: string;
    description?: string;
    parent_id?: string | null;
    character_count?: number | null;
    chat_count?: number | null;
};

export type ChannelInfo = {
    id?: number | null;
    name?: string | null;
    title?: string | null;
    type?: ChatType;
    description?: string | null;
    subscribers?: number | null;
};

export type Character = {
    id?: string;
};

export type CharacterCreate = {
    name: string;
    is_bot?: boolean;
    origin?: string;
    slot?: number;
    is_active?: boolean;
    timezone?: string;
    activity_type?: number;
    telegram_id?: string;
    id: string;
};

export type CharacterRead = {
    id: string;
    created_at: string;
    updated_at: string;
    name: string;
    is_bot?: boolean;
    origin?: string;
    slot?: number;
    is_active?: boolean;
    timezone?: string;
    activity_type?: number;
    telegram_id?: string;
};

export type ChatCreate = {
    /**
     * Platform where the chat exists
     */
    platform?: string | null;
    /**
     * Type of the chat
     */
    chat_type?: ChatType | null;
    /**
     * Unique identifier for the chat on the platform
     */
    platform_id?: number | null;
    /**
     * Name of the chat or channel
     */
    username?: string | null;
    /**
     * Invite link for the chat
     */
    invite_link?: string | null;
    max_capacity?: number | null;
    /**
     * Title of the chat
     */
    title?: string | null;
    /**
     * Detailed information about the chat
     */
    about?: string | null;
    /**
     * Total number of participants in the chat
     */
    participants_count?: number | null;
    /**
     * Count of messages in the latest month
     */
    messages_count_last_month?: number | null;
    /**
     * Count of replies in the latest month
     */
    replies_count_last_month?: number | null;
    /**
     * Count the number of appearences in other groups
     */
    forward_from_count_last_month?: number | null;
    /**
     * Count the number of appearences on this group of other groups/channels
     */
    forward_to_count_last_month?: number | null;
    /**
     * Average number of reactions per message
     */
    average_reactions?: number | null;
    /**
     * Linked chat id
     */
    linked_chat_id?: number | null;
    linked_chat_username?: string | null;
    /**
     * Whether the chat has slowmode enabled
     */
    slowmode_enabled?: boolean | null;
    /**
     * Slowmode in seconds
     */
    slowmode_seconds?: number | null;
    /**
     * Can a user forward a message from the chat
     */
    noforwards?: boolean | null;
    /**
     * Whether the chat has join to send enabled
     */
    join_to_send?: boolean | null;
    /**
     * Whether the chat has join request enabled
     */
    join_request?: boolean | null;
    /**
     * Whether the chat can view messages
     */
    view_messages?: boolean | null;
    /**
     * Whether the chat can send messages
     */
    send_messages?: boolean | null;
    /**
     * Whether the chat can send media
     */
    send_media?: boolean | null;
    /**
     * Whether the chat can send photos
     */
    send_photos?: boolean | null;
    /**
     * Whether the chat can send videos
     */
    send_videos?: boolean | null;
    /**
     * Whether the chat can embed links
     */
    embed_links?: boolean | null;
    /**
     * Whether the chat can send polls
     */
    send_polls?: boolean | null;
    /**
     * Whether the chat can send round videos
     */
    send_roundvideos?: boolean | null;
    /**
     * Whether the chat can send audios
     */
    send_audios?: boolean | null;
    /**
     * Whether the chat can send voices
     */
    send_voices?: boolean | null;
    /**
     * Whether the chat can send docs
     */
    send_docs?: boolean | null;
    /**
     * Whether the chat can send plain
     */
    send_plain?: boolean | null;
    /**
     * Whether the chat can change info
     */
    change_info?: boolean | null;
    /**
     * Whether the chat can invite users
     */
    invite_users?: boolean | null;
    /**
     * Whether the chat can pin messages
     */
    pin_messages?: boolean | null;
    /**
     * Whether the chat can send stickers
     */
    send_stickers?: boolean | null;
    /**
     * Whether the chat can send gifs
     */
    send_gifs?: boolean | null;
    /**
     * Whether the chat can send games
     */
    send_games?: boolean | null;
    /**
     * Whether the chat can send inline
     */
    send_inline?: boolean | null;
    /**
     * JSON object containing information about bots in the chat
     */
    bots?: Array<{
        [key: string]: unknown;
    }> | null;
};

export type ChatInfo = {
    id?: number | null;
    name?: string | null;
    title?: string | null;
    type?: ChatType | null;
    description?: string | null;
};

export type ChatRead = {
    id: string;
    created_at: string;
    updated_at: string;
    /**
     * Platform where the chat exists
     */
    platform?: string | null;
    /**
     * Type of the chat
     */
    chat_type?: ChatType | null;
    /**
     * Unique identifier for the chat on the platform
     */
    platform_id?: number | null;
    /**
     * Name of the chat or channel
     */
    username?: string | null;
    /**
     * Invite link for the chat
     */
    invite_link?: string | null;
    max_capacity?: number | null;
    /**
     * Title of the chat
     */
    title?: string | null;
    /**
     * Detailed information about the chat
     */
    about?: string | null;
    /**
     * Total number of participants in the chat
     */
    participants_count?: number | null;
    /**
     * Count of messages in the latest month
     */
    messages_count_last_month?: number | null;
    /**
     * Count of replies in the latest month
     */
    replies_count_last_month?: number | null;
    /**
     * Count the number of appearences in other groups
     */
    forward_from_count_last_month?: number | null;
    /**
     * Count the number of appearences on this group of other groups/channels
     */
    forward_to_count_last_month?: number | null;
    /**
     * Average number of reactions per message
     */
    average_reactions?: number | null;
    /**
     * Linked chat id
     */
    linked_chat_id?: number | null;
    linked_chat_username?: string | null;
    /**
     * Whether the chat has slowmode enabled
     */
    slowmode_enabled?: boolean | null;
    /**
     * Slowmode in seconds
     */
    slowmode_seconds?: number | null;
    /**
     * Can a user forward a message from the chat
     */
    noforwards?: boolean | null;
    /**
     * Whether the chat has join to send enabled
     */
    join_to_send?: boolean | null;
    /**
     * Whether the chat has join request enabled
     */
    join_request?: boolean | null;
    /**
     * Whether the chat can view messages
     */
    view_messages?: boolean | null;
    /**
     * Whether the chat can send messages
     */
    send_messages?: boolean | null;
    /**
     * Whether the chat can send media
     */
    send_media?: boolean | null;
    /**
     * Whether the chat can send photos
     */
    send_photos?: boolean | null;
    /**
     * Whether the chat can send videos
     */
    send_videos?: boolean | null;
    /**
     * Whether the chat can embed links
     */
    embed_links?: boolean | null;
    /**
     * Whether the chat can send polls
     */
    send_polls?: boolean | null;
    /**
     * Whether the chat can send round videos
     */
    send_roundvideos?: boolean | null;
    /**
     * Whether the chat can send audios
     */
    send_audios?: boolean | null;
    /**
     * Whether the chat can send voices
     */
    send_voices?: boolean | null;
    /**
     * Whether the chat can send docs
     */
    send_docs?: boolean | null;
    /**
     * Whether the chat can send plain
     */
    send_plain?: boolean | null;
    /**
     * Whether the chat can change info
     */
    change_info?: boolean | null;
    /**
     * Whether the chat can invite users
     */
    invite_users?: boolean | null;
    /**
     * Whether the chat can pin messages
     */
    pin_messages?: boolean | null;
    /**
     * Whether the chat can send stickers
     */
    send_stickers?: boolean | null;
    /**
     * Whether the chat can send gifs
     */
    send_gifs?: boolean | null;
    /**
     * Whether the chat can send games
     */
    send_games?: boolean | null;
    /**
     * Whether the chat can send inline
     */
    send_inline?: boolean | null;
    /**
     * JSON object containing information about bots in the chat
     */
    bots?: Array<{
        [key: string]: unknown;
    }> | null;
    categories?: Array<string>;
    system_chat_members?: Array<string>;
};

export type ChatType = 'User' | 'Group' | 'Channel' | 'Bot' | 'Unknown';

export type ChatView = {
    id: string;
    platform_id: number | null;
    username: string | null;
    title: string | null;
    chat_type: ChatType | null;
    linked_chat_username: string | null;
    categories?: Array<string>;
    system_chat_members?: Array<string>;
};

export type EchoMissionInput = {
    target_group_id?: string | null;
    message: MessageForwardRequest;
    characters_categories?: Array<string>;
    chats_categories?: Array<string>;
    /**
     * The time to start the mission - in UTC timezone
     */
    trigger_time?: string | null;
    max_retries?: number | null;
    keep_hype?: boolean;
    scenario_external_id?: string | null;
};

export type FirstPuppetShowMessage = {
    message: Message;
    start_time?: string | null;
};

export type FluffMissionInput = {
    character_ids?: Array<string> | null;
    /**
     * If character_ids is provided, this field is ignored
     */
    characters_categories?: Array<string> | null;
    is_routine?: boolean | null;
    batch_size?: number | null;
    /**
     * in minutes
     */
    batch_interval?: number | null;
    get_chats?: boolean | null;
    sync_personal_details?: boolean | null;
    disable_auto_download_media?: boolean | null;
    delete_all_active_sessions?: boolean | null;
};

export type ForwardMessageAction = {
    id?: string;
    type?: 'send_message' | 'send_bulk_messages' | 'join_group' | 'leave_group' | 'reply_to_message' | 'forward_message' | 'behavioural';
    prefrences?: ActionPrefrences;
    args: ForwardMessageArgs;
};

export type ForwardMessageArgs = {
    from_chat: ChatInfo;
    message_info?: ModelsOperatorCommonMessageInfoMessageInfo | string | null;
    target_chat: ChatInfo;
    message?: InputMessage | null;
};

export type ForwardMessageResponseContentInput = {
    message_info: ModelsOperatorCommonMessageInfoMessageInfo;
};

export type ForwardMessageResponseContentOutput = {
    message_info: MessageInfoOutput;
};

export type GroupInfo = {
    id?: number | null;
    name?: string | null;
    title?: string | null;
    type?: ChatType;
    description?: string | null;
    members?: number | null;
    online?: number | null;
};

export type HttpOperatorValidationError = {
    detail?: Array<OperatorValidationError> | null;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type InputMessage = {
    text?: string | null;
    attachments?: Array<Attachment>;
};

export type JoinGroupAction = {
    id?: string;
    type?: 'send_message' | 'send_bulk_messages' | 'join_group' | 'leave_group' | 'reply_to_message' | 'forward_message' | 'behavioural';
    prefrences?: ActionPrefrences;
    args: JoinGroupArgs;
};

export type JoinGroupArgs = {
    chat?: ChatInfo | null;
    join_discussion_group_if_availble?: boolean;
    invite_link?: string | null;
};

export type JoinGroupResponseContentInput = {
    chat_info: ChannelInfo | GroupInfo | null;
    discussion_group_chat_info: ChannelInfo | GroupInfo | null;
};

export type JoinGroupResponseContentOutput = {
    chat_info: ChannelInfo | GroupInfo | null;
    discussion_group_chat_info: ChannelInfo | GroupInfo | null;
};

export type LeaveGroupAction = {
    id?: string;
    type?: 'send_message' | 'send_bulk_messages' | 'join_group' | 'leave_group' | 'reply_to_message' | 'forward_message' | 'behavioural';
    prefrences?: ActionPrefrences;
    args: LeaveGroupArgs;
};

export type LeaveGroupArgs = {
    chat: ChatInfo;
};

export type LeaveGroupResponseContent = {
    [key: string]: unknown;
};

export type Message = {
    message_content: InputMessage;
    metadata?: MessageMetadata | null;
    replies?: Array<Message>;
};

export type MessageForwardRequest = {
    message_content?: InputMessage | null;
    message_info?: ModelsPlannerMessageInfo | string | null;
};

export type MessageInfoOutput = {
    timestamp: string;
    peer_id?: string | null;
    from_id?: string | null;
    text_hash?: string | null;
    message_id?: string | null;
    viewer_id?: string | null;
};

export type MessageMetadata = {
    chat_id: string;
    character_id: string;
    relative_seconds?: number;
};

export type MissionCreate = {
    description?: string | null;
    payload: {
        [key: string]: unknown;
    };
    mission_type: string;
    status_code?: MissionStatus | null;
};

export type MissionExposure = {
    potential_exposure: number;
    potential_exposure_groups: number;
    potential_exposure_min_start?: string | null;
    potential_exposure_max_end?: string | null;
    actual_exposure: number;
    actual_exposure_groups: number;
    actual_exposure_min_start?: string | null;
    actual_exposure_max_end?: string | null;
};

export type MissionRead = {
    id: string;
    created_at: string;
    updated_at: string;
    description?: string | null;
    payload: {
        [key: string]: unknown;
    };
    mission_type: string;
    status_code?: MissionStatus | null;
    scenarios?: Array<ScenarioRead>;
};

export type MissionStatus = 'submitted' | 'planning' | 'failed_planning' | 'running' | 'completed' | 'canceled' | 'planned';

export type OperatorValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type Prefrences = {
    actions_timeout?: number | null;
    action_interval?: number | null;
    close_browser_when_finished?: boolean | null;
    should_login_telegram?: boolean | null;
    verify_proxy_working?: boolean | null;
    fail_fast?: boolean | null;
};

export type PuppetShowInput = {
    first_messages: Array<FirstPuppetShowMessage>;
    max_retries?: number | null;
};

export type RandomDistributionMissionInput = {
    characters_categories?: Array<string> | null;
    chat_categories?: Array<string> | null;
    messages: Array<InputMessage>;
    messages_amount?: number | null;
    messages_amount_per_character?: number | null;
    max_messages_per_chat?: number | null;
    batch_size?: number | null;
    batch_interval?: number | null;
    start_time?: string | null;
    max_retries?: number | null;
    random_choice?: boolean | null;
};

export type ReplyToMessageAction = {
    id?: string;
    type?: 'send_message' | 'send_bulk_messages' | 'join_group' | 'leave_group' | 'reply_to_message' | 'forward_message' | 'behavioural';
    prefrences?: ActionPrefrences;
    args: ReplyToMessageArgs;
};

export type ReplyToMessageArgs = {
    chat: ChatInfo;
    message_info?: ModelsOperatorCommonMessageInfoMessageInfo | string | null;
    input_message_content: InputMessage;
};

export type ReplyToMessageResponseContentInput = {
    message_info: ModelsOperatorCommonMessageInfoMessageInfo;
};

export type ReplyToMessageResponseContentOutput = {
    message_info: MessageInfoOutput;
};

export type Scenario = {
    id?: string;
    profile: Character;
    prefrences?: Prefrences;
    actions: Array<JoinGroupAction | LeaveGroupAction | ReplyToMessageAction | SendMessageAction | ForwardMessageAction | BehaviouralAction | SendBulkMessagesAction>;
};

export type ScenarioCreate = {
    description: string;
    trigger_time: string;
    actions?: Array<ActionCreate>;
    external_id?: string | null;
    scenario_parent_id?: string | null;
    character_id: string;
    mission_id: string | null;
    expiration_time?: string | null;
    max_retries?: number;
};

export type ScenarioInfo = {
    start_time: string;
    end_time?: string | null;
};

export type ScenarioRead = {
    id: string;
    created_at: string;
    updated_at: string;
    description: string;
    trigger_time: string;
    status_code?: ModelsScenariosScenarioStatus;
    start_time?: string | null;
    end_time?: string | null;
    error?: string | null;
    scenario_parent_id?: string | null;
    external_id?: string | null;
    character_id: string;
    expiration_time?: string | null;
    retries?: number;
    max_retries?: number;
    actions?: Array<ActionRead>;
    mission_id: string;
};

export type ScenarioResultInput = {
    id?: string;
    status: ModelsOperatorActivityScenarioScenarioStatus;
    scenario_info: ScenarioInfo;
    actions_responses: Array<ActionResponseInput>;
};

export type ScenarioResultOutput = {
    id?: string;
    status: ModelsOperatorActivityScenarioScenarioStatus;
    scenario_info: ScenarioInfo;
    actions_responses: Array<ActionResponseOutput>;
};

export type ScenarioResultStatus = 'success' | 'failed' | 'pending' | 'finished';

export type ScenarioUpdate = {
    status_code?: ModelsScenariosScenarioStatus;
    start_time?: string | null;
    end_time?: string | null;
    error?: string | null;
    retries?: number;
};

export type SendBulkMessagesAction = {
    id?: string;
    type?: 'send_message' | 'send_bulk_messages' | 'join_group' | 'leave_group' | 'reply_to_message' | 'forward_message' | 'behavioural';
    prefrences?: ActionPrefrences;
    args: SendBulkMessagesArgs;
};

export type SendBulkMessagesArgs = {
    chat: ChatInfo;
    messages: Array<string>;
    interval?: number;
};

export type SendBulkMessagesResponseContentInput = {
    message_infos: Array<ModelsOperatorCommonMessageInfoMessageInfo>;
};

export type SendBulkMessagesResponseContentOutput = {
    message_infos: Array<MessageInfoOutput>;
};

export type SendMessageAction = {
    id?: string;
    type?: 'send_message' | 'send_bulk_messages' | 'join_group' | 'leave_group' | 'reply_to_message' | 'forward_message' | 'behavioural';
    prefrences?: ActionPrefrences;
    args: SendMessageArgs;
};

export type SendMessageArgs = {
    chat: ChatInfo;
    input_message_content: InputMessage;
};

export type SendMessageResponseContentInput = {
    message_info: ModelsOperatorCommonMessageInfoMessageInfo;
};

export type SendMessageResponseContentOutput = {
    message_info: MessageInfoOutput;
};

export type TreeNodeCategoryNodePayload = {
    payload: CategoryNodePayload;
    children: Array<TreeNodeCategoryNodePayload> | null;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type ModelsActionsActionStatus = 'scheduled' | 'in_process' | 'running' | 'success' | 'failed' | 'cancelled' | 'pending' | 'planned';

export type ModelsOperatorActivityActionsActionStatusActionStatus = {
    status_code: ActionStatusCode;
    error?: string | null;
};

export type ModelsOperatorActivityScenarioScenarioStatus = {
    status_code: ScenarioResultStatus;
    error?: string | null;
};

export type ModelsOperatorCommonMessageInfoMessageInfo = {
    timestamp: string;
    peer_id?: string | null;
    from_id?: string | null;
    text_hash?: string | null;
    message_id?: string | null;
    viewer_id?: string | null;
};

export type ModelsPlannerMessageInfo = {
    platform_chat_id?: number | null;
    platform_chat_name?: string | null;
    timestamp: string;
    peer_id?: string | null;
    from_id?: string | null;
    text_hash?: string | null;
    message_id?: string | null;
    viewer_id?: string | null;
};

export type ModelsScenariosScenarioStatus = 'scheduled' | 'pending' | 'running' | 'success' | 'failed' | 'cancelled' | 'in_process' | 'planned';

export type GetScenariosScenariosGetData = {
    body?: never;
    path?: never;
    query?: {
        skip?: number;
        limit?: number;
    };
    url: '/scenarios/';
};

export type GetScenariosScenariosGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetScenariosScenariosGetError = GetScenariosScenariosGetErrors[keyof GetScenariosScenariosGetErrors];

export type GetScenariosScenariosGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ScenarioRead>;
};

export type GetScenariosScenariosGetResponse = GetScenariosScenariosGetResponses[keyof GetScenariosScenariosGetResponses];

export type CreateScenarioScenariosPostData = {
    body: ScenarioCreate;
    path?: never;
    query?: never;
    url: '/scenarios/';
};

export type CreateScenarioScenariosPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateScenarioScenariosPostError = CreateScenarioScenariosPostErrors[keyof CreateScenarioScenariosPostErrors];

export type CreateScenarioScenariosPostResponses = {
    /**
     * Successful Response
     */
    200: ScenarioRead;
};

export type CreateScenarioScenariosPostResponse = CreateScenarioScenariosPostResponses[keyof CreateScenarioScenariosPostResponses];

export type GetScenarioScenariosScenarioIdGetData = {
    body?: never;
    path: {
        scenario_id: string;
    };
    query?: never;
    url: '/scenarios/{scenario_id}';
};

export type GetScenarioScenariosScenarioIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetScenarioScenariosScenarioIdGetError = GetScenarioScenariosScenarioIdGetErrors[keyof GetScenarioScenariosScenarioIdGetErrors];

export type GetScenarioScenariosScenarioIdGetResponses = {
    /**
     * Successful Response
     */
    200: ScenarioRead;
};

export type GetScenarioScenariosScenarioIdGetResponse = GetScenarioScenariosScenarioIdGetResponses[keyof GetScenarioScenariosScenarioIdGetResponses];

export type UpdateScenarioScenariosScenarioIdPutData = {
    body: ScenarioUpdate;
    path: {
        scenario_id: string;
    };
    query?: never;
    url: '/scenarios/{scenario_id}';
};

export type UpdateScenarioScenariosScenarioIdPutErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateScenarioScenariosScenarioIdPutError = UpdateScenarioScenariosScenarioIdPutErrors[keyof UpdateScenarioScenariosScenarioIdPutErrors];

export type UpdateScenarioScenariosScenarioIdPutResponses = {
    /**
     * Successful Response
     */
    200: ScenarioRead;
};

export type UpdateScenarioScenariosScenarioIdPutResponse = UpdateScenarioScenariosScenarioIdPutResponses[keyof UpdateScenarioScenariosScenarioIdPutResponses];

export type GetScenarioChildrensScenariosScenarioIdChildrensGetData = {
    body?: never;
    path: {
        scenario_id: string;
    };
    query?: never;
    url: '/scenarios/{scenario_id}/childrens';
};

export type GetScenarioChildrensScenariosScenarioIdChildrensGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetScenarioChildrensScenariosScenarioIdChildrensGetError = GetScenarioChildrensScenariosScenarioIdChildrensGetErrors[keyof GetScenarioChildrensScenariosScenarioIdChildrensGetErrors];

export type GetScenarioChildrensScenariosScenarioIdChildrensGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetScenarioParentsScenariosScenarioIdParentGetData = {
    body?: never;
    path: {
        scenario_id: string;
    };
    query?: never;
    url: '/scenarios/{scenario_id}/parent';
};

export type GetScenarioParentsScenariosScenarioIdParentGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetScenarioParentsScenariosScenarioIdParentGetError = GetScenarioParentsScenariosScenarioIdParentGetErrors[keyof GetScenarioParentsScenariosScenarioIdParentGetErrors];

export type GetScenarioParentsScenariosScenarioIdParentGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CancelScenarioScenariosScenarioIdCancelPostData = {
    body?: never;
    path: {
        scenario_id: string;
    };
    query?: {
        error?: string;
    };
    url: '/scenarios/{scenario_id}/cancel';
};

export type CancelScenarioScenariosScenarioIdCancelPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CancelScenarioScenariosScenarioIdCancelPostError = CancelScenarioScenariosScenarioIdCancelPostErrors[keyof CancelScenarioScenariosScenarioIdCancelPostErrors];

export type CancelScenarioScenariosScenarioIdCancelPostResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type CancelScenarioScenariosScenarioIdCancelPostResponse = CancelScenarioScenariosScenarioIdCancelPostResponses[keyof CancelScenarioScenariosScenarioIdCancelPostResponses];

export type RerunScenarioScenariosScenarioIdRerunGetData = {
    body?: never;
    path: {
        scenario_id: string;
    };
    query?: never;
    url: '/scenarios/{scenario_id}/rerun';
};

export type RerunScenarioScenariosScenarioIdRerunGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RerunScenarioScenariosScenarioIdRerunGetError = RerunScenarioScenariosScenarioIdRerunGetErrors[keyof RerunScenarioScenariosScenarioIdRerunGetErrors];

export type RerunScenarioScenariosScenarioIdRerunGetResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type RerunScenarioScenariosScenarioIdRerunGetResponse = RerunScenarioScenariosScenarioIdRerunGetResponses[keyof RerunScenarioScenariosScenarioIdRerunGetResponses];

export type RescheduledScenariosScenariosRescheduledScenariosPostData = {
    body?: never;
    path?: never;
    query?: {
        delay_minutes?: number;
    };
    url: '/scenarios/rescheduled_scenarios/';
};

export type RescheduledScenariosScenariosRescheduledScenariosPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RescheduledScenariosScenariosRescheduledScenariosPostError = RescheduledScenariosScenariosRescheduledScenariosPostErrors[keyof RescheduledScenariosScenariosRescheduledScenariosPostErrors];

export type RescheduledScenariosScenariosRescheduledScenariosPostResponses = {
    /**
     * Successful Response
     */
    200: Array<ScenarioRead>;
};

export type RescheduledScenariosScenariosRescheduledScenariosPostResponse = RescheduledScenariosScenariosRescheduledScenariosPostResponses[keyof RescheduledScenariosScenariosRescheduledScenariosPostResponses];

export type GetActionActionsActionIdGetData = {
    body?: never;
    path: {
        action_id: string;
    };
    query?: never;
    url: '/actions/{action_id}';
};

export type GetActionActionsActionIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetActionActionsActionIdGetError = GetActionActionsActionIdGetErrors[keyof GetActionActionsActionIdGetErrors];

export type GetActionActionsActionIdGetResponses = {
    /**
     * Successful Response
     */
    200: ActionRead;
};

export type GetActionActionsActionIdGetResponse = GetActionActionsActionIdGetResponses[keyof GetActionActionsActionIdGetResponses];

export type UpdateActionStatusActionsActionIdStatusPutData = {
    body: ActionStatusUpdate;
    path: {
        action_id: string;
    };
    query?: never;
    url: '/actions/{action_id}/status';
};

export type UpdateActionStatusActionsActionIdStatusPutErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateActionStatusActionsActionIdStatusPutError = UpdateActionStatusActionsActionIdStatusPutErrors[keyof UpdateActionStatusActionsActionIdStatusPutErrors];

export type UpdateActionStatusActionsActionIdStatusPutResponses = {
    /**
     * Successful Response
     */
    200: ActionRead;
};

export type UpdateActionStatusActionsActionIdStatusPutResponse = UpdateActionStatusActionsActionIdStatusPutResponses[keyof UpdateActionStatusActionsActionIdStatusPutResponses];

export type GetAllCharactersCharactersGetData = {
    body?: never;
    path?: never;
    query?: {
        is_active?: boolean;
        skip?: number;
        limit?: number;
    };
    url: '/characters/';
};

export type GetAllCharactersCharactersGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllCharactersCharactersGetError = GetAllCharactersCharactersGetErrors[keyof GetAllCharactersCharactersGetErrors];

export type GetAllCharactersCharactersGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CharacterRead>;
};

export type GetAllCharactersCharactersGetResponse = GetAllCharactersCharactersGetResponses[keyof GetAllCharactersCharactersGetResponses];

export type CreateCharacterCharactersPostData = {
    body: CharacterCreate;
    path?: never;
    query?: never;
    url: '/characters/';
};

export type CreateCharacterCharactersPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCharacterCharactersPostError = CreateCharacterCharactersPostErrors[keyof CreateCharacterCharactersPostErrors];

export type CreateCharacterCharactersPostResponses = {
    /**
     * Successful Response
     */
    200: CharacterRead;
};

export type CreateCharacterCharactersPostResponse = CreateCharacterCharactersPostResponses[keyof CreateCharacterCharactersPostResponses];

export type DeleteCharacterCharactersCharacterIdDeleteData = {
    body?: never;
    path: {
        character_id: string;
    };
    query?: never;
    url: '/characters/{character_id}';
};

export type DeleteCharacterCharactersCharacterIdDeleteErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteCharacterCharactersCharacterIdDeleteError = DeleteCharacterCharactersCharacterIdDeleteErrors[keyof DeleteCharacterCharactersCharacterIdDeleteErrors];

export type DeleteCharacterCharactersCharacterIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetCharacterCharactersCharacterIdGetData = {
    body?: never;
    path: {
        character_id: string;
    };
    query?: never;
    url: '/characters/{character_id}';
};

export type GetCharacterCharactersCharacterIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCharacterCharactersCharacterIdGetError = GetCharacterCharactersCharacterIdGetErrors[keyof GetCharacterCharactersCharacterIdGetErrors];

export type GetCharacterCharactersCharacterIdGetResponses = {
    /**
     * Successful Response
     */
    200: CharacterRead;
};

export type GetCharacterCharactersCharacterIdGetResponse = GetCharacterCharactersCharacterIdGetResponses[keyof GetCharacterCharactersCharacterIdGetResponses];

export type GetCharacterByNameCharactersNameNameGetData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/characters/name/{name}';
};

export type GetCharacterByNameCharactersNameNameGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCharacterByNameCharactersNameNameGetError = GetCharacterByNameCharactersNameNameGetErrors[keyof GetCharacterByNameCharactersNameNameGetErrors];

export type GetCharacterByNameCharactersNameNameGetResponses = {
    /**
     * Successful Response
     */
    200: CharacterRead;
};

export type GetCharacterByNameCharactersNameNameGetResponse = GetCharacterByNameCharactersNameNameGetResponses[keyof GetCharacterByNameCharactersNameNameGetResponses];

export type GetBotCharactersCharactersBotsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/characters/bots/';
};

export type GetBotCharactersCharactersBotsGetErrors = {
    /**
     * Not found
     */
    404: unknown;
};

export type GetBotCharactersCharactersBotsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CharacterRead>;
};

export type GetBotCharactersCharactersBotsGetResponse = GetBotCharactersCharactersBotsGetResponses[keyof GetBotCharactersCharactersBotsGetResponses];

export type GetHumanCharactersCharactersHumansGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/characters/humans/';
};

export type GetHumanCharactersCharactersHumansGetErrors = {
    /**
     * Not found
     */
    404: unknown;
};

export type GetHumanCharactersCharactersHumansGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CharacterRead>;
};

export type GetHumanCharactersCharactersHumansGetResponse = GetHumanCharactersCharactersHumansGetResponses[keyof GetHumanCharactersCharactersHumansGetResponses];

export type GetCharacterChatsCharactersCharacterIdChatsGetData = {
    body?: never;
    path: {
        character_id: string;
    };
    query?: never;
    url: '/characters/{character_id}/chats';
};

export type GetCharacterChatsCharactersCharacterIdChatsGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCharacterChatsCharactersCharacterIdChatsGetError = GetCharacterChatsCharactersCharacterIdChatsGetErrors[keyof GetCharacterChatsCharactersCharacterIdChatsGetErrors];

export type GetCharacterChatsCharactersCharacterIdChatsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ChatRead> | null;
};

export type GetCharacterChatsCharactersCharacterIdChatsGetResponse = GetCharacterChatsCharactersCharacterIdChatsGetResponses[keyof GetCharacterChatsCharactersCharacterIdChatsGetResponses];

export type AddCharacterToChatCharactersCharacterIdChatsChatIdPostData = {
    body?: never;
    path: {
        character_id: string;
        chat_id: string;
    };
    query?: never;
    url: '/characters/{character_id}/chats/{chat_id}';
};

export type AddCharacterToChatCharactersCharacterIdChatsChatIdPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddCharacterToChatCharactersCharacterIdChatsChatIdPostError = AddCharacterToChatCharactersCharacterIdChatsChatIdPostErrors[keyof AddCharacterToChatCharactersCharacterIdChatsChatIdPostErrors];

export type AddCharacterToChatCharactersCharacterIdChatsChatIdPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetSlotsCountCharactersSlotsCountGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/characters/slots_count/';
};

export type GetSlotsCountCharactersSlotsCountGetErrors = {
    /**
     * Not found
     */
    404: unknown;
};

export type GetSlotsCountCharactersSlotsCountGetResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: number;
    };
};

export type GetSlotsCountCharactersSlotsCountGetResponse = GetSlotsCountCharactersSlotsCountGetResponses[keyof GetSlotsCountCharactersSlotsCountGetResponses];

export type GetCharacterCategoriesCharactersCharacterIdCategoriesGetData = {
    body?: never;
    path: {
        character_id: string;
    };
    query?: never;
    url: '/characters/{character_id}/categories/';
};

export type GetCharacterCategoriesCharactersCharacterIdCategoriesGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCharacterCategoriesCharactersCharacterIdCategoriesGetError = GetCharacterCategoriesCharactersCharacterIdCategoriesGetErrors[keyof GetCharacterCategoriesCharactersCharacterIdCategoriesGetErrors];

export type GetCharacterCategoriesCharactersCharacterIdCategoriesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CategoryRead>;
};

export type GetCharacterCategoriesCharactersCharacterIdCategoriesGetResponse = GetCharacterCategoriesCharactersCharacterIdCategoriesGetResponses[keyof GetCharacterCategoriesCharactersCharacterIdCategoriesGetResponses];

export type RemoveCharacterFromCategoryCharactersCharacterIdCategoriesCategoryIdDeleteData = {
    body?: never;
    path: {
        character_id: string;
        category_id: string;
    };
    query?: never;
    url: '/characters/{character_id}/categories/{category_id}';
};

export type RemoveCharacterFromCategoryCharactersCharacterIdCategoriesCategoryIdDeleteErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RemoveCharacterFromCategoryCharactersCharacterIdCategoriesCategoryIdDeleteError = RemoveCharacterFromCategoryCharactersCharacterIdCategoriesCategoryIdDeleteErrors[keyof RemoveCharacterFromCategoryCharactersCharacterIdCategoriesCategoryIdDeleteErrors];

export type RemoveCharacterFromCategoryCharactersCharacterIdCategoriesCategoryIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AddCharacterToCategoryCharactersCharacterIdCategoriesCategoryIdPostData = {
    body?: never;
    path: {
        character_id: string;
        category_id: string;
    };
    query?: {
        remove_others?: boolean;
    };
    url: '/characters/{character_id}/categories/{category_id}';
};

export type AddCharacterToCategoryCharactersCharacterIdCategoriesCategoryIdPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddCharacterToCategoryCharactersCharacterIdCategoriesCategoryIdPostError = AddCharacterToCategoryCharactersCharacterIdCategoriesCategoryIdPostErrors[keyof AddCharacterToCategoryCharactersCharacterIdCategoriesCategoryIdPostErrors];

export type AddCharacterToCategoryCharactersCharacterIdCategoriesCategoryIdPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetCharactersStatesCharactersStatisticsGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * List of characters IDs
         */
        characters_ids?: Array<string>;
    };
    url: '/characters/statistics/';
};

export type GetCharactersStatesCharactersStatisticsGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCharactersStatesCharactersStatisticsGetError = GetCharactersStatesCharactersStatisticsGetErrors[keyof GetCharactersStatesCharactersStatisticsGetErrors];

export type GetCharactersStatesCharactersStatisticsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type GetCharactersStatesCharactersStatisticsGetResponse = GetCharactersStatesCharactersStatisticsGetResponses[keyof GetCharactersStatesCharactersStatisticsGetResponses];

export type GetCharactersStatesByDateCharactersStatisticsByDateGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * List of characters IDs
         */
        characters_ids?: Array<string>;
    };
    url: '/characters/statistics/by_date/';
};

export type GetCharactersStatesByDateCharactersStatisticsByDateGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCharactersStatesByDateCharactersStatisticsByDateGetError = GetCharactersStatesByDateCharactersStatisticsByDateGetErrors[keyof GetCharactersStatesByDateCharactersStatisticsByDateGetErrors];

export type GetCharactersStatesByDateCharactersStatisticsByDateGetResponses = {
    /**
     * Successful Response
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type GetCharactersStatesByDateCharactersStatisticsByDateGetResponse = GetCharactersStatesByDateCharactersStatisticsByDateGetResponses[keyof GetCharactersStatesByDateCharactersStatisticsByDateGetResponses];

export type GetCharacterChatsCountCharactersCharacterIdChatCountGetData = {
    body?: never;
    path: {
        character_id: string;
    };
    query?: never;
    url: '/characters/{character_id}/chat_count';
};

export type GetCharacterChatsCountCharactersCharacterIdChatCountGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCharacterChatsCountCharactersCharacterIdChatCountGetError = GetCharacterChatsCountCharactersCharacterIdChatCountGetErrors[keyof GetCharacterChatsCountCharactersCharacterIdChatCountGetErrors];

export type GetCharacterChatsCountCharactersCharacterIdChatCountGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CreateChatFromUsernameOrPlatformIdChatsFromUsernameOrPlatformIdPostData = {
    body?: never;
    path?: never;
    query?: {
        username?: string;
        platform_id?: number;
    };
    url: '/chats/from_username_or_platform_id/';
};

export type CreateChatFromUsernameOrPlatformIdChatsFromUsernameOrPlatformIdPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateChatFromUsernameOrPlatformIdChatsFromUsernameOrPlatformIdPostError = CreateChatFromUsernameOrPlatformIdChatsFromUsernameOrPlatformIdPostErrors[keyof CreateChatFromUsernameOrPlatformIdChatsFromUsernameOrPlatformIdPostErrors];

export type CreateChatFromUsernameOrPlatformIdChatsFromUsernameOrPlatformIdPostResponses = {
    /**
     * Successful Response
     */
    200: ChatRead;
};

export type CreateChatFromUsernameOrPlatformIdChatsFromUsernameOrPlatformIdPostResponse = CreateChatFromUsernameOrPlatformIdChatsFromUsernameOrPlatformIdPostResponses[keyof CreateChatFromUsernameOrPlatformIdChatsFromUsernameOrPlatformIdPostResponses];

export type GetAllChatsChatsGetData = {
    body?: never;
    path?: never;
    query?: {
        skip?: number;
        limit?: number;
    };
    url: '/chats/';
};

export type GetAllChatsChatsGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllChatsChatsGetError = GetAllChatsChatsGetErrors[keyof GetAllChatsChatsGetErrors];

export type GetAllChatsChatsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ChatRead>;
};

export type GetAllChatsChatsGetResponse = GetAllChatsChatsGetResponses[keyof GetAllChatsChatsGetResponses];

export type CreateChatChatsPostData = {
    body: ChatCreate;
    path?: never;
    query?: never;
    url: '/chats/';
};

export type CreateChatChatsPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateChatChatsPostError = CreateChatChatsPostErrors[keyof CreateChatChatsPostErrors];

export type CreateChatChatsPostResponses = {
    /**
     * Successful Response
     */
    200: ChatRead;
};

export type CreateChatChatsPostResponse = CreateChatChatsPostResponses[keyof CreateChatChatsPostResponses];

export type CreateChatsFromCsvChatsFromCsvPostData = {
    body: BodyCreateChatsFromCsvChatsFromCsvPost;
    path?: never;
    query?: never;
    url: '/chats/from_csv/';
};

export type CreateChatsFromCsvChatsFromCsvPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateChatsFromCsvChatsFromCsvPostError = CreateChatsFromCsvChatsFromCsvPostErrors[keyof CreateChatsFromCsvChatsFromCsvPostErrors];

export type CreateChatsFromCsvChatsFromCsvPostResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type CreateChatsFromCsvChatsFromCsvPostResponse = CreateChatsFromCsvChatsFromCsvPostResponses[keyof CreateChatsFromCsvChatsFromCsvPostResponses];

export type DeleteChatChatsChatIdDeleteData = {
    body?: never;
    path: {
        chat_id: string;
    };
    query?: never;
    url: '/chats/{chat_id}';
};

export type DeleteChatChatsChatIdDeleteErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteChatChatsChatIdDeleteError = DeleteChatChatsChatIdDeleteErrors[keyof DeleteChatChatsChatIdDeleteErrors];

export type DeleteChatChatsChatIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetChatChatsChatIdGetData = {
    body?: never;
    path: {
        chat_id: string;
    };
    query?: never;
    url: '/chats/{chat_id}';
};

export type GetChatChatsChatIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetChatChatsChatIdGetError = GetChatChatsChatIdGetErrors[keyof GetChatChatsChatIdGetErrors];

export type GetChatChatsChatIdGetResponses = {
    /**
     * Successful Response
     */
    200: ChatRead;
};

export type GetChatChatsChatIdGetResponse = GetChatChatsChatIdGetResponses[keyof GetChatChatsChatIdGetResponses];

export type UpdateChatChatsChatIdPutData = {
    body: ChatCreate;
    path: {
        chat_id: string;
    };
    query?: never;
    url: '/chats/{chat_id}';
};

export type UpdateChatChatsChatIdPutErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateChatChatsChatIdPutError = UpdateChatChatsChatIdPutErrors[keyof UpdateChatChatsChatIdPutErrors];

export type UpdateChatChatsChatIdPutResponses = {
    /**
     * Successful Response
     */
    200: ChatRead;
};

export type UpdateChatChatsChatIdPutResponse = UpdateChatChatsChatIdPutResponses[keyof UpdateChatChatsChatIdPutResponses];

export type GetChatByUsernameChatsUsernameUsernameGetData = {
    body?: never;
    path: {
        username: string;
    };
    query?: never;
    url: '/chats/username/{username}';
};

export type GetChatByUsernameChatsUsernameUsernameGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetChatByUsernameChatsUsernameUsernameGetError = GetChatByUsernameChatsUsernameUsernameGetErrors[keyof GetChatByUsernameChatsUsernameUsernameGetErrors];

export type GetChatByUsernameChatsUsernameUsernameGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ChatRead>;
};

export type GetChatByUsernameChatsUsernameUsernameGetResponse = GetChatByUsernameChatsUsernameUsernameGetResponses[keyof GetChatByUsernameChatsUsernameUsernameGetResponses];

export type GetChatByPlatformIdChatsPlatformIdPlatformIdGetData = {
    body?: never;
    path: {
        platform_id: number;
    };
    query?: never;
    url: '/chats/platform_id/{platform_id}';
};

export type GetChatByPlatformIdChatsPlatformIdPlatformIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetChatByPlatformIdChatsPlatformIdPlatformIdGetError = GetChatByPlatformIdChatsPlatformIdPlatformIdGetErrors[keyof GetChatByPlatformIdChatsPlatformIdPlatformIdGetErrors];

export type GetChatByPlatformIdChatsPlatformIdPlatformIdGetResponses = {
    /**
     * Successful Response
     */
    200: ChatRead;
};

export type GetChatByPlatformIdChatsPlatformIdPlatformIdGetResponse = GetChatByPlatformIdChatsPlatformIdPlatformIdGetResponses[keyof GetChatByPlatformIdChatsPlatformIdPlatformIdGetResponses];

export type GetChatsViewChatsViewChatsGetData = {
    body?: never;
    path?: never;
    query?: {
        skip?: number;
        limit?: number;
    };
    url: '/chats/view_chats/';
};

export type GetChatsViewChatsViewChatsGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetChatsViewChatsViewChatsGetError = GetChatsViewChatsViewChatsGetErrors[keyof GetChatsViewChatsViewChatsGetErrors];

export type GetChatsViewChatsViewChatsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ChatView>;
};

export type GetChatsViewChatsViewChatsGetResponse = GetChatsViewChatsViewChatsGetResponses[keyof GetChatsViewChatsViewChatsGetResponses];

export type GetAllWriteableGroupsChatsCanSendMessageChatsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/chats/can_send_message_chats/';
};

export type GetAllWriteableGroupsChatsCanSendMessageChatsGetErrors = {
    /**
     * Not found
     */
    404: unknown;
};

export type GetAllWriteableGroupsChatsCanSendMessageChatsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ChatRead>;
};

export type GetAllWriteableGroupsChatsCanSendMessageChatsGetResponse = GetAllWriteableGroupsChatsCanSendMessageChatsGetResponses[keyof GetAllWriteableGroupsChatsCanSendMessageChatsGetResponses];

export type GetChatCharactersChatsChatIdCharactersGetData = {
    body?: never;
    path: {
        chat_id: string;
    };
    query?: never;
    url: '/chats/{chat_id}/characters';
};

export type GetChatCharactersChatsChatIdCharactersGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetChatCharactersChatsChatIdCharactersGetError = GetChatCharactersChatsChatIdCharactersGetErrors[keyof GetChatCharactersChatsChatIdCharactersGetErrors];

export type GetChatCharactersChatsChatIdCharactersGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CharacterRead>;
};

export type GetChatCharactersChatsChatIdCharactersGetResponse = GetChatCharactersChatsChatIdCharactersGetResponses[keyof GetChatCharactersChatsChatIdCharactersGetResponses];

export type RemoveCharacterFromChatChatsChatIdCharactersCharacterIdDeleteData = {
    body?: never;
    path: {
        chat_id: string;
        character_id: string;
    };
    query?: never;
    url: '/chats/{chat_id}/characters/{character_id}';
};

export type RemoveCharacterFromChatChatsChatIdCharactersCharacterIdDeleteErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RemoveCharacterFromChatChatsChatIdCharactersCharacterIdDeleteError = RemoveCharacterFromChatChatsChatIdCharactersCharacterIdDeleteErrors[keyof RemoveCharacterFromChatChatsChatIdCharactersCharacterIdDeleteErrors];

export type RemoveCharacterFromChatChatsChatIdCharactersCharacterIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetChatCategoriesChatsChatIdCategoriesGetData = {
    body?: never;
    path: {
        chat_id: string;
    };
    query?: never;
    url: '/chats/{chat_id}/categories/';
};

export type GetChatCategoriesChatsChatIdCategoriesGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetChatCategoriesChatsChatIdCategoriesGetError = GetChatCategoriesChatsChatIdCategoriesGetErrors[keyof GetChatCategoriesChatsChatIdCategoriesGetErrors];

export type GetChatCategoriesChatsChatIdCategoriesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CategoryRead>;
};

export type GetChatCategoriesChatsChatIdCategoriesGetResponse = GetChatCategoriesChatsChatIdCategoriesGetResponses[keyof GetChatCategoriesChatsChatIdCategoriesGetResponses];

export type RemoveChatFromCategoryChatsChatIdCategoriesCategoryIdDeleteData = {
    body?: never;
    path: {
        chat_id: string;
        category_id: string;
    };
    query?: never;
    url: '/chats/{chat_id}/categories/{category_id}';
};

export type RemoveChatFromCategoryChatsChatIdCategoriesCategoryIdDeleteErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RemoveChatFromCategoryChatsChatIdCategoriesCategoryIdDeleteError = RemoveChatFromCategoryChatsChatIdCategoriesCategoryIdDeleteErrors[keyof RemoveChatFromCategoryChatsChatIdCategoriesCategoryIdDeleteErrors];

export type RemoveChatFromCategoryChatsChatIdCategoriesCategoryIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AddChatToCategoryChatsChatIdCategoriesCategoryIdPostData = {
    body?: never;
    path: {
        chat_id: string;
        category_id: string;
    };
    query?: {
        remove_others?: boolean;
    };
    url: '/chats/{chat_id}/categories/{category_id}';
};

export type AddChatToCategoryChatsChatIdCategoriesCategoryIdPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddChatToCategoryChatsChatIdCategoriesCategoryIdPostError = AddChatToCategoryChatsChatIdCategoriesCategoryIdPostErrors[keyof AddChatToCategoryChatsChatIdCategoriesCategoryIdPostErrors];

export type AddChatToCategoryChatsChatIdCategoriesCategoryIdPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetChatCharactersCountChatsChatIdCharacterCountGetData = {
    body?: never;
    path: {
        chat_id: string;
    };
    query?: never;
    url: '/chats/{chat_id}/character_count';
};

export type GetChatCharactersCountChatsChatIdCharacterCountGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetChatCharactersCountChatsChatIdCharacterCountGetError = GetChatCharactersCountChatsChatIdCharacterCountGetErrors[keyof GetChatCharactersCountChatsChatIdCharacterCountGetErrors];

export type GetChatCharactersCountChatsChatIdCharacterCountGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type SubmitScenarioScenarioPostOperatorScenarioPostData = {
    body: ScenarioResultInput;
    path?: never;
    query?: never;
    url: '/operator/scenario';
};

export type SubmitScenarioScenarioPostOperatorScenarioPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Unprocessable Entity
     */
    422: HttpOperatorValidationError;
};

export type SubmitScenarioScenarioPostOperatorScenarioPostError = SubmitScenarioScenarioPostOperatorScenarioPostErrors[keyof SubmitScenarioScenarioPostOperatorScenarioPostErrors];

export type SubmitScenarioScenarioPostOperatorScenarioPostResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type SubmitScenarioScenarioPostOperatorScenarioPostResponse = SubmitScenarioScenarioPostOperatorScenarioPostResponses[keyof SubmitScenarioScenarioPostOperatorScenarioPostResponses];

export type GetScenarioScenarioScenarioIdGetOperatorScenarioScenarioIdGetData = {
    body?: never;
    path: {
        scenario_id: string;
    };
    query?: never;
    url: '/operator/scenario/{scenario_id}';
};

export type GetScenarioScenarioScenarioIdGetOperatorScenarioScenarioIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Unprocessable Entity
     */
    422: HttpOperatorValidationError;
};

export type GetScenarioScenarioScenarioIdGetOperatorScenarioScenarioIdGetError = GetScenarioScenarioScenarioIdGetOperatorScenarioScenarioIdGetErrors[keyof GetScenarioScenarioScenarioIdGetOperatorScenarioScenarioIdGetErrors];

export type GetScenarioScenarioScenarioIdGetOperatorScenarioScenarioIdGetResponses = {
    /**
     * Successful Response
     */
    200: ScenarioResultOutput;
};

export type GetScenarioScenarioScenarioIdGetOperatorScenarioScenarioIdGetResponse = GetScenarioScenarioScenarioIdGetOperatorScenarioScenarioIdGetResponses[keyof GetScenarioScenarioScenarioIdGetOperatorScenarioScenarioIdGetResponses];

export type SendScenarioOperatorMockPostWithSlotOperatorMockSlotScenarioPostData = {
    body: Scenario;
    path: {
        slot: number;
    };
    query?: never;
    url: '/operator_mock/{slot}/scenario';
};

export type SendScenarioOperatorMockPostWithSlotOperatorMockSlotScenarioPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Unprocessable Entity
     */
    422: HttpOperatorValidationError;
};

export type SendScenarioOperatorMockPostWithSlotOperatorMockSlotScenarioPostError = SendScenarioOperatorMockPostWithSlotOperatorMockSlotScenarioPostErrors[keyof SendScenarioOperatorMockPostWithSlotOperatorMockSlotScenarioPostErrors];

export type SendScenarioOperatorMockPostWithSlotOperatorMockSlotScenarioPostResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type SendScenarioOperatorMockPostWithSlotOperatorMockSlotScenarioPostResponse = SendScenarioOperatorMockPostWithSlotOperatorMockSlotScenarioPostResponses[keyof SendScenarioOperatorMockPostWithSlotOperatorMockSlotScenarioPostResponses];

export type SendScenarioOperatorMockPostWithoutSlotOperatorMockScenarioPostData = {
    body: Scenario;
    path?: never;
    query?: never;
    url: '/operator_mock/scenario';
};

export type SendScenarioOperatorMockPostWithoutSlotOperatorMockScenarioPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Unprocessable Entity
     */
    422: HttpOperatorValidationError;
};

export type SendScenarioOperatorMockPostWithoutSlotOperatorMockScenarioPostError = SendScenarioOperatorMockPostWithoutSlotOperatorMockScenarioPostErrors[keyof SendScenarioOperatorMockPostWithoutSlotOperatorMockScenarioPostErrors];

export type SendScenarioOperatorMockPostWithoutSlotOperatorMockScenarioPostResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type SendScenarioOperatorMockPostWithoutSlotOperatorMockScenarioPostResponse = SendScenarioOperatorMockPostWithoutSlotOperatorMockScenarioPostResponses[keyof SendScenarioOperatorMockPostWithoutSlotOperatorMockScenarioPostResponses];

export type GetMissionsMissionsGetData = {
    body?: never;
    path?: never;
    query?: {
        skip?: number;
        limit?: number;
        include_scenarios?: boolean;
    };
    url: '/missions/';
};

export type GetMissionsMissionsGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMissionsMissionsGetError = GetMissionsMissionsGetErrors[keyof GetMissionsMissionsGetErrors];

export type GetMissionsMissionsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<MissionRead>;
};

export type GetMissionsMissionsGetResponse = GetMissionsMissionsGetResponses[keyof GetMissionsMissionsGetResponses];

export type CreateMissionMissionsPostData = {
    body: MissionCreate;
    path?: never;
    query?: never;
    url: '/missions/';
};

export type CreateMissionMissionsPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateMissionMissionsPostError = CreateMissionMissionsPostErrors[keyof CreateMissionMissionsPostErrors];

export type CreateMissionMissionsPostResponses = {
    /**
     * Successful Response
     */
    200: MissionRead;
};

export type CreateMissionMissionsPostResponse = CreateMissionMissionsPostResponses[keyof CreateMissionMissionsPostResponses];

export type GetMissionsByTypeMissionsTypeMissionTypeGetData = {
    body?: never;
    path: {
        mission_type: string;
    };
    query?: never;
    url: '/missions/type/{mission_type}';
};

export type GetMissionsByTypeMissionsTypeMissionTypeGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMissionsByTypeMissionsTypeMissionTypeGetError = GetMissionsByTypeMissionsTypeMissionTypeGetErrors[keyof GetMissionsByTypeMissionsTypeMissionTypeGetErrors];

export type GetMissionsByTypeMissionsTypeMissionTypeGetResponses = {
    /**
     * Successful Response
     */
    200: Array<MissionRead>;
};

export type GetMissionsByTypeMissionsTypeMissionTypeGetResponse = GetMissionsByTypeMissionsTypeMissionTypeGetResponses[keyof GetMissionsByTypeMissionsTypeMissionTypeGetResponses];

export type DeleteMissionMissionsMissionIdDeleteData = {
    body?: never;
    path: {
        mission_id: string;
    };
    query?: never;
    url: '/missions/{mission_id}';
};

export type DeleteMissionMissionsMissionIdDeleteErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteMissionMissionsMissionIdDeleteError = DeleteMissionMissionsMissionIdDeleteErrors[keyof DeleteMissionMissionsMissionIdDeleteErrors];

export type DeleteMissionMissionsMissionIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetMissionMissionsMissionIdGetData = {
    body?: never;
    path: {
        mission_id: string;
    };
    query?: never;
    url: '/missions/{mission_id}';
};

export type GetMissionMissionsMissionIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMissionMissionsMissionIdGetError = GetMissionMissionsMissionIdGetErrors[keyof GetMissionMissionsMissionIdGetErrors];

export type GetMissionMissionsMissionIdGetResponses = {
    /**
     * Successful Response
     */
    200: MissionRead;
};

export type GetMissionMissionsMissionIdGetResponse = GetMissionMissionsMissionIdGetResponses[keyof GetMissionMissionsMissionIdGetResponses];

export type UpdateMissionMissionsMissionIdPutData = {
    body: MissionCreate;
    path: {
        mission_id: string;
    };
    query?: never;
    url: '/missions/{mission_id}';
};

export type UpdateMissionMissionsMissionIdPutErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateMissionMissionsMissionIdPutError = UpdateMissionMissionsMissionIdPutErrors[keyof UpdateMissionMissionsMissionIdPutErrors];

export type UpdateMissionMissionsMissionIdPutResponses = {
    /**
     * Successful Response
     */
    200: MissionRead;
};

export type UpdateMissionMissionsMissionIdPutResponse = UpdateMissionMissionsMissionIdPutResponses[keyof UpdateMissionMissionsMissionIdPutResponses];

export type PlanMissionMissionsPlanMissionMissionIdPostData = {
    body?: never;
    path: {
        mission_id: string;
    };
    query?: never;
    url: '/missions/plan_mission/{mission_id}';
};

export type PlanMissionMissionsPlanMissionMissionIdPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PlanMissionMissionsPlanMissionMissionIdPostError = PlanMissionMissionsPlanMissionMissionIdPostErrors[keyof PlanMissionMissionsPlanMissionMissionIdPostErrors];

export type PlanMissionMissionsPlanMissionMissionIdPostResponses = {
    /**
     * Successful Response
     */
    200: Array<ScenarioRead>;
};

export type PlanMissionMissionsPlanMissionMissionIdPostResponse = PlanMissionMissionsPlanMissionMissionIdPostResponses[keyof PlanMissionMissionsPlanMissionMissionIdPostResponses];

export type RunMissionMissionsRunMissionMissionIdPostData = {
    body?: never;
    path: {
        mission_id: string;
    };
    query?: never;
    url: '/missions/run_mission/{mission_id}';
};

export type RunMissionMissionsRunMissionMissionIdPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RunMissionMissionsRunMissionMissionIdPostError = RunMissionMissionsRunMissionMissionIdPostErrors[keyof RunMissionMissionsRunMissionMissionIdPostErrors];

export type RunMissionMissionsRunMissionMissionIdPostResponses = {
    /**
     * Successful Response
     */
    200: Array<ScenarioRead>;
};

export type RunMissionMissionsRunMissionMissionIdPostResponse = RunMissionMissionsRunMissionMissionIdPostResponses[keyof RunMissionMissionsRunMissionMissionIdPostResponses];

export type RetryMissionMissionsRetryMissionMissionIdPostData = {
    body?: never;
    path: {
        mission_id: string;
    };
    query?: never;
    url: '/missions/retry_mission/{mission_id}';
};

export type RetryMissionMissionsRetryMissionMissionIdPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RetryMissionMissionsRetryMissionMissionIdPostError = RetryMissionMissionsRetryMissionMissionIdPostErrors[keyof RetryMissionMissionsRetryMissionMissionIdPostErrors];

export type RetryMissionMissionsRetryMissionMissionIdPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CancelMissionMissionsCancelMissionMissionIdPostData = {
    body?: never;
    path: {
        mission_id: string;
    };
    query?: never;
    url: '/missions/cancel_mission/{mission_id}';
};

export type CancelMissionMissionsCancelMissionMissionIdPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CancelMissionMissionsCancelMissionMissionIdPostError = CancelMissionMissionsCancelMissionMissionIdPostErrors[keyof CancelMissionMissionsCancelMissionMissionIdPostErrors];

export type CancelMissionMissionsCancelMissionMissionIdPostResponses = {
    /**
     * Successful Response
     */
    200: MissionRead;
};

export type CancelMissionMissionsCancelMissionMissionIdPostResponse = CancelMissionMissionsCancelMissionMissionIdPostResponses[keyof CancelMissionMissionsCancelMissionMissionIdPostResponses];

export type CreateMission2MissionsCreateMission2PostData = {
    body: FluffMissionInput | AllocateProfilesGroupsMissionInput | EchoMissionInput | PuppetShowInput | RandomDistributionMissionInput;
    path?: never;
    query?: never;
    url: '/missions/create_mission2/';
};

export type CreateMission2MissionsCreateMission2PostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateMission2MissionsCreateMission2PostError = CreateMission2MissionsCreateMission2PostErrors[keyof CreateMission2MissionsCreateMission2PostErrors];

export type CreateMission2MissionsCreateMission2PostResponses = {
    /**
     * Successful Response
     */
    200: MissionRead;
};

export type CreateMission2MissionsCreateMission2PostResponse = CreateMission2MissionsCreateMission2PostResponses[keyof CreateMission2MissionsCreateMission2PostResponses];

export type GetMissionsStatisticsMissionsStatisticsGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * List of mission IDs
         */
        mission_ids?: Array<string>;
        /**
         * Mission type
         */
        mission_type?: string;
    };
    url: '/missions/statistics/';
};

export type GetMissionsStatisticsMissionsStatisticsGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMissionsStatisticsMissionsStatisticsGetError = GetMissionsStatisticsMissionsStatisticsGetErrors[keyof GetMissionsStatisticsMissionsStatisticsGetErrors];

export type GetMissionsStatisticsMissionsStatisticsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type GetMissionsStatisticsMissionsStatisticsGetResponse = GetMissionsStatisticsMissionsStatisticsGetResponses[keyof GetMissionsStatisticsMissionsStatisticsGetResponses];

export type GetMissionPotentialExposureMissionsExposureMissionIdGetData = {
    body?: never;
    path: {
        mission_id: string;
    };
    query?: never;
    url: '/missions/exposure/{mission_id}';
};

export type GetMissionPotentialExposureMissionsExposureMissionIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMissionPotentialExposureMissionsExposureMissionIdGetError = GetMissionPotentialExposureMissionsExposureMissionIdGetErrors[keyof GetMissionPotentialExposureMissionsExposureMissionIdGetErrors];

export type GetMissionPotentialExposureMissionsExposureMissionIdGetResponses = {
    /**
     * Successful Response
     */
    200: MissionExposure;
};

export type GetMissionPotentialExposureMissionsExposureMissionIdGetResponse = GetMissionPotentialExposureMissionsExposureMissionIdGetResponses[keyof GetMissionPotentialExposureMissionsExposureMissionIdGetResponses];

export type GetFluffMissionByCharacterIdMissionsFluffMissionCharacterIdGetData = {
    body?: never;
    path: {
        character_id: string;
    };
    query?: never;
    url: '/missions/fluff_mission/{character_id}';
};

export type GetFluffMissionByCharacterIdMissionsFluffMissionCharacterIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetFluffMissionByCharacterIdMissionsFluffMissionCharacterIdGetError = GetFluffMissionByCharacterIdMissionsFluffMissionCharacterIdGetErrors[keyof GetFluffMissionByCharacterIdMissionsFluffMissionCharacterIdGetErrors];

export type GetFluffMissionByCharacterIdMissionsFluffMissionCharacterIdGetResponses = {
    /**
     * Successful Response
     */
    200: MissionRead;
};

export type GetFluffMissionByCharacterIdMissionsFluffMissionCharacterIdGetResponse = GetFluffMissionByCharacterIdMissionsFluffMissionCharacterIdGetResponses[keyof GetFluffMissionByCharacterIdMissionsFluffMissionCharacterIdGetResponses];

export type GetAllCategoriesCategoriesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/categories/';
};

export type GetAllCategoriesCategoriesGetErrors = {
    /**
     * Not found
     */
    404: unknown;
};

export type GetAllCategoriesCategoriesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CategoryRead>;
};

export type GetAllCategoriesCategoriesGetResponse = GetAllCategoriesCategoriesGetResponses[keyof GetAllCategoriesCategoriesGetResponses];

export type CreateCategoryCategoriesPostData = {
    body: CategoryCreate;
    path?: never;
    query?: never;
    url: '/categories/';
};

export type CreateCategoryCategoriesPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateCategoryCategoriesPostError = CreateCategoryCategoriesPostErrors[keyof CreateCategoryCategoriesPostErrors];

export type CreateCategoryCategoriesPostResponses = {
    /**
     * Successful Response
     */
    200: CategoryRead;
};

export type CreateCategoryCategoriesPostResponse = CreateCategoryCategoriesPostResponses[keyof CreateCategoryCategoriesPostResponses];

export type DeleteCategoryCategoriesCategoryIdDeleteData = {
    body?: never;
    path: {
        category_id: string;
    };
    query?: never;
    url: '/categories/{category_id}';
};

export type DeleteCategoryCategoriesCategoryIdDeleteErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteCategoryCategoriesCategoryIdDeleteError = DeleteCategoryCategoriesCategoryIdDeleteErrors[keyof DeleteCategoryCategoriesCategoryIdDeleteErrors];

export type DeleteCategoryCategoriesCategoryIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetCategoryCategoriesCategoryIdGetData = {
    body?: never;
    path: {
        category_id: string;
    };
    query?: never;
    url: '/categories/{category_id}';
};

export type GetCategoryCategoriesCategoryIdGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCategoryCategoriesCategoryIdGetError = GetCategoryCategoriesCategoryIdGetErrors[keyof GetCategoryCategoriesCategoryIdGetErrors];

export type GetCategoryCategoriesCategoryIdGetResponses = {
    /**
     * Successful Response
     */
    200: CategoryRead;
};

export type GetCategoryCategoriesCategoryIdGetResponse = GetCategoryCategoriesCategoryIdGetResponses[keyof GetCategoryCategoriesCategoryIdGetResponses];

export type UpdateCategoryCategoriesCategoryIdPutData = {
    body: CategoryCreate;
    path: {
        category_id: string;
    };
    query?: never;
    url: '/categories/{category_id}';
};

export type UpdateCategoryCategoriesCategoryIdPutErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateCategoryCategoriesCategoryIdPutError = UpdateCategoryCategoriesCategoryIdPutErrors[keyof UpdateCategoryCategoriesCategoryIdPutErrors];

export type UpdateCategoryCategoriesCategoryIdPutResponses = {
    /**
     * Successful Response
     */
    200: CategoryRead;
};

export type UpdateCategoryCategoriesCategoryIdPutResponse = UpdateCategoryCategoriesCategoryIdPutResponses[keyof UpdateCategoryCategoriesCategoryIdPutResponses];

export type GetRootCategoryCategoriesRootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/categories/root/';
};

export type GetRootCategoryCategoriesRootGetErrors = {
    /**
     * Not found
     */
    404: unknown;
};

export type GetRootCategoryCategoriesRootGetResponses = {
    /**
     * Successful Response
     */
    200: CategoryRead;
};

export type GetRootCategoryCategoriesRootGetResponse = GetRootCategoryCategoriesRootGetResponses[keyof GetRootCategoryCategoriesRootGetResponses];

export type GetCategoryChildrensCategoriesCategoryIdChildrensGetData = {
    body?: never;
    path: {
        category_id: string;
    };
    query?: never;
    url: '/categories/{category_id}/childrens/';
};

export type GetCategoryChildrensCategoriesCategoryIdChildrensGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCategoryChildrensCategoriesCategoryIdChildrensGetError = GetCategoryChildrensCategoriesCategoryIdChildrensGetErrors[keyof GetCategoryChildrensCategoriesCategoryIdChildrensGetErrors];

export type GetCategoryChildrensCategoriesCategoryIdChildrensGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CategoryRead>;
};

export type GetCategoryChildrensCategoriesCategoryIdChildrensGetResponse = GetCategoryChildrensCategoriesCategoryIdChildrensGetResponses[keyof GetCategoryChildrensCategoriesCategoryIdChildrensGetResponses];

export type GetCategoryDescendantsCategoriesCategoryIdDescendantsGetData = {
    body?: never;
    path: {
        category_id: string;
    };
    query?: never;
    url: '/categories/{category_id}/descendants/';
};

export type GetCategoryDescendantsCategoriesCategoryIdDescendantsGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCategoryDescendantsCategoriesCategoryIdDescendantsGetError = GetCategoryDescendantsCategoriesCategoryIdDescendantsGetErrors[keyof GetCategoryDescendantsCategoriesCategoryIdDescendantsGetErrors];

export type GetCategoryDescendantsCategoriesCategoryIdDescendantsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CategoryRead>;
};

export type GetCategoryDescendantsCategoriesCategoryIdDescendantsGetResponse = GetCategoryDescendantsCategoriesCategoryIdDescendantsGetResponses[keyof GetCategoryDescendantsCategoriesCategoryIdDescendantsGetResponses];

export type GetCategoryCharactersCategoriesCategoryIdCharactersGetData = {
    body?: never;
    path: {
        category_id: string;
    };
    query?: {
        include_descendants?: boolean;
    };
    url: '/categories/{category_id}/characters/';
};

export type GetCategoryCharactersCategoriesCategoryIdCharactersGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCategoryCharactersCategoriesCategoryIdCharactersGetError = GetCategoryCharactersCategoriesCategoryIdCharactersGetErrors[keyof GetCategoryCharactersCategoriesCategoryIdCharactersGetErrors];

export type GetCategoryCharactersCategoriesCategoryIdCharactersGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CharacterRead>;
};

export type GetCategoryCharactersCategoriesCategoryIdCharactersGetResponse = GetCategoryCharactersCategoriesCategoryIdCharactersGetResponses[keyof GetCategoryCharactersCategoriesCategoryIdCharactersGetResponses];

export type GetCategoryChatsCategoriesCategoryIdChatsGetData = {
    body?: never;
    path: {
        category_id: string;
    };
    query?: {
        include_descendants?: boolean;
    };
    url: '/categories/{category_id}/chats/';
};

export type GetCategoryChatsCategoriesCategoryIdChatsGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCategoryChatsCategoriesCategoryIdChatsGetError = GetCategoryChatsCategoriesCategoryIdChatsGetErrors[keyof GetCategoryChatsCategoriesCategoryIdChatsGetErrors];

export type GetCategoryChatsCategoriesCategoryIdChatsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ChatRead>;
};

export type GetCategoryChatsCategoriesCategoryIdChatsGetResponse = GetCategoryChatsCategoriesCategoryIdChatsGetResponses[keyof GetCategoryChatsCategoriesCategoryIdChatsGetResponses];

export type GetCategoriesTreeCategoriesTreeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/categories/tree/';
};

export type GetCategoriesTreeCategoriesTreeGetErrors = {
    /**
     * Not found
     */
    404: unknown;
};

export type GetCategoriesTreeCategoriesTreeGetResponses = {
    /**
     * Successful Response
     */
    200: TreeNodeCategoryNodePayload;
};

export type GetCategoriesTreeCategoriesTreeGetResponse = GetCategoriesTreeCategoriesTreeGetResponses[keyof GetCategoriesTreeCategoriesTreeGetResponses];

export type GetCategoryCharactersCountCategoriesCategoryIdCharacterCountGetData = {
    body?: never;
    path: {
        category_id: string;
    };
    query?: never;
    url: '/categories/{category_id}/character_count';
};

export type GetCategoryCharactersCountCategoriesCategoryIdCharacterCountGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCategoryCharactersCountCategoriesCategoryIdCharacterCountGetError = GetCategoryCharactersCountCategoriesCategoryIdCharacterCountGetErrors[keyof GetCategoryCharactersCountCategoriesCategoryIdCharacterCountGetErrors];

export type GetCategoryCharactersCountCategoriesCategoryIdCharacterCountGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetCategoryChatsCountCategoriesCategoryIdChatCountGetData = {
    body?: never;
    path: {
        category_id: string;
    };
    query?: never;
    url: '/categories/{category_id}/chat_count';
};

export type GetCategoryChatsCountCategoriesCategoryIdChatCountGetErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetCategoryChatsCountCategoriesCategoryIdChatCountGetError = GetCategoryChatsCountCategoriesCategoryIdChatCountGetErrors[keyof GetCategoryChatsCountCategoriesCategoryIdChatCountGetErrors];

export type GetCategoryChatsCountCategoriesCategoryIdChatCountGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AddManyCharactersToCategoryCategoriesCategoryIdManyCharactersPostData = {
    body: AddManyCharactersToCategoryRequest;
    path: {
        category_id: string;
    };
    query?: never;
    url: '/categories/{category_id}/many_characters';
};

export type AddManyCharactersToCategoryCategoriesCategoryIdManyCharactersPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddManyCharactersToCategoryCategoriesCategoryIdManyCharactersPostError = AddManyCharactersToCategoryCategoriesCategoryIdManyCharactersPostErrors[keyof AddManyCharactersToCategoryCategoriesCategoryIdManyCharactersPostErrors];

export type AddManyCharactersToCategoryCategoriesCategoryIdManyCharactersPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AddManyChatsToCategoryCategoriesCategoryIdManyChatsPostData = {
    body: AddManyChatsToCategoryRequest;
    path: {
        category_id: string;
    };
    query?: never;
    url: '/categories/{category_id}/many_chats';
};

export type AddManyChatsToCategoryCategoriesCategoryIdManyChatsPostErrors = {
    /**
     * Not found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddManyChatsToCategoryCategoriesCategoryIdManyChatsPostError = AddManyChatsToCategoryCategoriesCategoryIdManyChatsPostErrors[keyof AddManyChatsToCategoryCategoriesCategoryIdManyChatsPostErrors];

export type AddManyChatsToCategoryCategoriesCategoryIdManyChatsPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type RootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type HealthHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthHealthGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: (string & {});
};