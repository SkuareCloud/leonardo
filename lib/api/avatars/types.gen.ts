// This file is auto-generated by @hey-api/openapi-ts

export type AvatarBase = {
    data: {
        [key: string]: unknown;
    };
};

export type AvatarModelWithProxy = {
    id: string;
    /**
     * See AvatarData for details
     */
    data: {
        [key: string]: unknown;
    };
    pir_id: string;
    home_continent_code: string;
    home_iso_3166_1_alpha_2_code: string;
    home_iso_3166_2_subdivision_code: string;
    home_city: string;
    proxy: Proxy | null;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type Pir = {
    parent_pir_id?: string | null;
    name: string;
    id: string;
};

export type PatchAvatar = {
    path: Array<string>;
    new_value?: unknown | null;
};

export type PirBase = {
    parent_pir_id?: string | null;
    name: string;
};

export type Proxy = {
    name: string;
    type: ProxyType;
    ip_address?: string | null;
    fqdn?: string | null;
    port: number;
    username: string;
    password?: string | null;
    remarks?: string | null;
    last_ping_remarks?: string | null;
    id: string;
    ip_api_data: {
        [key: string]: unknown;
    } | null;
    status: string;
    city: string | null;
    iso_3166_1_alpha_2_code: string | null;
    iso_3166_2_subdivision_code: string | null;
    continent_code: string | null;
    timezone: string | null;
    status_is_success: boolean;
};

export type ProxyBase = {
    name: string;
    type: ProxyType;
    ip_address?: string | null;
    fqdn?: string | null;
    port: number;
    username: string;
    password?: string | null;
    remarks?: string | null;
    last_ping_remarks?: string | null;
};

export type ProxyType = 'socks4' | 'socks4a' | 'socks5' | 'socks5h' | 'https' | 'http';

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type Address = {
    continent_code: string;
    iso_3166_1_alpha_2_code: string;
    iso_3166_2_subdivision_code: string;
    city: string;
};

export type Api = {
    api_id: number;
    api_hash: string;
};

export type Telegram = {
    activation_source?: string | null;
    active?: boolean | null;
    activity_rate?: number | null;
    api?: Api | null;
};

export type SocialNetworkAccounts = {
    telegram?: Telegram | null;
};

export type AvatarData = {
    pir_id: string;
    eliza_character: {
        [key: string]: unknown;
    };
    gender: Gender;
    date_of_birth: string;
    /**
     * E.164 formatted phone number (not enforced by jsonschema)
     */
    phone_number: string;
    email: string;
    addresses: {
        [key: string]: Address;
    };
    social_network_accounts?: SocialNetworkAccounts | null;
};

export type Gender = 'Male' | 'Female';

export type RootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type RootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type HealthHealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/health';
};

export type HealthHealthGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AvatarsAvatarsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/avatars';
};

export type AvatarsAvatarsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<AvatarModelWithProxy>;
};

export type AvatarsAvatarsGetResponse = AvatarsAvatarsGetResponses[keyof AvatarsAvatarsGetResponses];

export type AddAvatarAvatarsPostData = {
    body: AvatarBase;
    path?: never;
    query?: never;
    url: '/avatars';
};

export type AddAvatarAvatarsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddAvatarAvatarsPostError = AddAvatarAvatarsPostErrors[keyof AddAvatarAvatarsPostErrors];

export type AddAvatarAvatarsPostResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type QueryAvatarsAvatarsQueryGetData = {
    body?: never;
    path?: never;
    query: {
        pir_id: string;
        exact?: boolean;
    };
    url: '/avatars/query';
};

export type QueryAvatarsAvatarsQueryGetErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type QueryAvatarsAvatarsQueryGetError = QueryAvatarsAvatarsQueryGetErrors[keyof QueryAvatarsAvatarsQueryGetErrors];

export type QueryAvatarsAvatarsQueryGetResponses = {
    /**
     * Successful Response
     */
    200: Array<AvatarModelWithProxy>;
};

export type QueryAvatarsAvatarsQueryGetResponse = QueryAvatarsAvatarsQueryGetResponses[keyof QueryAvatarsAvatarsQueryGetResponses];

export type DeleteAvatarAvatarsAvatarIdDeleteData = {
    body?: never;
    path: {
        avatar_id: string;
    };
    query?: never;
    url: '/avatars/{avatar_id}';
};

export type DeleteAvatarAvatarsAvatarIdDeleteErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteAvatarAvatarsAvatarIdDeleteError = DeleteAvatarAvatarsAvatarIdDeleteErrors[keyof DeleteAvatarAvatarsAvatarIdDeleteErrors];

export type DeleteAvatarAvatarsAvatarIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteAvatarAvatarsAvatarIdDeleteResponse = DeleteAvatarAvatarsAvatarIdDeleteResponses[keyof DeleteAvatarAvatarsAvatarIdDeleteResponses];

export type GetAvatarAvatarsAvatarIdGetData = {
    body?: never;
    path: {
        avatar_id: string;
    };
    query?: never;
    url: '/avatars/{avatar_id}';
};

export type GetAvatarAvatarsAvatarIdGetErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAvatarAvatarsAvatarIdGetError = GetAvatarAvatarsAvatarIdGetErrors[keyof GetAvatarAvatarsAvatarIdGetErrors];

export type GetAvatarAvatarsAvatarIdGetResponses = {
    /**
     * Successful Response
     */
    200: AvatarModelWithProxy;
};

export type GetAvatarAvatarsAvatarIdGetResponse = GetAvatarAvatarsAvatarIdGetResponses[keyof GetAvatarAvatarsAvatarIdGetResponses];

export type PatchAvatarAvatarsAvatarIdPatchData = {
    body: PatchAvatar;
    path: {
        avatar_id: string;
    };
    query?: never;
    url: '/avatars/{avatar_id}';
};

export type PatchAvatarAvatarsAvatarIdPatchErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchAvatarAvatarsAvatarIdPatchError = PatchAvatarAvatarsAvatarIdPatchErrors[keyof PatchAvatarAvatarsAvatarIdPatchErrors];

export type PatchAvatarAvatarsAvatarIdPatchResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type PatchAvatarAvatarsAvatarIdPatchResponse = PatchAvatarAvatarsAvatarIdPatchResponses[keyof PatchAvatarAvatarsAvatarIdPatchResponses];

export type ReplaceAvatarAvatarsAvatarIdPutData = {
    body: AvatarBase;
    path: {
        avatar_id: string;
    };
    query?: never;
    url: '/avatars/{avatar_id}';
};

export type ReplaceAvatarAvatarsAvatarIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReplaceAvatarAvatarsAvatarIdPutError = ReplaceAvatarAvatarsAvatarIdPutErrors[keyof ReplaceAvatarAvatarsAvatarIdPutErrors];

export type ReplaceAvatarAvatarsAvatarIdPutResponses = {
    /**
     * Created
     */
    201: unknown;
    /**
     * Successful Response
     */
    204: void;
};

export type ReplaceAvatarAvatarsAvatarIdPutResponse = ReplaceAvatarAvatarsAvatarIdPutResponses[keyof ReplaceAvatarAvatarsAvatarIdPutResponses];

export type AssignSpecificProxyToAvatarAvatarsAvatarIdProxyProxyIdPostData = {
    body?: never;
    path: {
        avatar_id: string;
        proxy_id: string;
    };
    query?: never;
    url: '/avatars/{avatar_id}/proxy/{proxy_id}';
};

export type AssignSpecificProxyToAvatarAvatarsAvatarIdProxyProxyIdPostErrors = {
    /**
     * Bad Request
     */
    400: unknown;
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AssignSpecificProxyToAvatarAvatarsAvatarIdProxyProxyIdPostError = AssignSpecificProxyToAvatarAvatarsAvatarIdProxyProxyIdPostErrors[keyof AssignSpecificProxyToAvatarAvatarsAvatarIdProxyProxyIdPostErrors];

export type AssignSpecificProxyToAvatarAvatarsAvatarIdProxyProxyIdPostResponses = {
    /**
     * Successful Response
     */
    200: Proxy;
};

export type AssignSpecificProxyToAvatarAvatarsAvatarIdProxyProxyIdPostResponse = AssignSpecificProxyToAvatarAvatarsAvatarIdProxyProxyIdPostResponses[keyof AssignSpecificProxyToAvatarAvatarsAvatarIdProxyProxyIdPostResponses];

export type UnassignProxyForAvatarAvatarsAvatarIdProxyDeleteData = {
    body?: never;
    path: {
        avatar_id: string;
    };
    query?: never;
    url: '/avatars/{avatar_id}/proxy';
};

export type UnassignProxyForAvatarAvatarsAvatarIdProxyDeleteErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UnassignProxyForAvatarAvatarsAvatarIdProxyDeleteError = UnassignProxyForAvatarAvatarsAvatarIdProxyDeleteErrors[keyof UnassignProxyForAvatarAvatarsAvatarIdProxyDeleteErrors];

export type UnassignProxyForAvatarAvatarsAvatarIdProxyDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type UnassignProxyForAvatarAvatarsAvatarIdProxyDeleteResponse = UnassignProxyForAvatarAvatarsAvatarIdProxyDeleteResponses[keyof UnassignProxyForAvatarAvatarsAvatarIdProxyDeleteResponses];

export type GetAvatarProxyAvatarsAvatarIdProxyGetData = {
    body?: never;
    path: {
        avatar_id: string;
    };
    query?: never;
    url: '/avatars/{avatar_id}/proxy';
};

export type GetAvatarProxyAvatarsAvatarIdProxyGetErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAvatarProxyAvatarsAvatarIdProxyGetError = GetAvatarProxyAvatarsAvatarIdProxyGetErrors[keyof GetAvatarProxyAvatarsAvatarIdProxyGetErrors];

export type GetAvatarProxyAvatarsAvatarIdProxyGetResponses = {
    /**
     * Successful Response
     */
    200: Proxy;
};

export type GetAvatarProxyAvatarsAvatarIdProxyGetResponse = GetAvatarProxyAvatarsAvatarIdProxyGetResponses[keyof GetAvatarProxyAvatarsAvatarIdProxyGetResponses];

export type AssignProxyToAvatarAvatarsAvatarIdProxyPostData = {
    body?: never;
    path: {
        avatar_id: string;
    };
    query?: never;
    url: '/avatars/{avatar_id}/proxy';
};

export type AssignProxyToAvatarAvatarsAvatarIdProxyPostErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AssignProxyToAvatarAvatarsAvatarIdProxyPostError = AssignProxyToAvatarAvatarsAvatarIdProxyPostErrors[keyof AssignProxyToAvatarAvatarsAvatarIdProxyPostErrors];

export type AssignProxyToAvatarAvatarsAvatarIdProxyPostResponses = {
    /**
     * Successful Response
     */
    200: Proxy;
};

export type AssignProxyToAvatarAvatarsAvatarIdProxyPostResponse = AssignProxyToAvatarAvatarsAvatarIdProxyPostResponses[keyof AssignProxyToAvatarAvatarsAvatarIdProxyPostResponses];

export type GetPirsPirsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/pirs';
};

export type GetPirsPirsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<Pir>;
};

export type GetPirsPirsGetResponse = GetPirsPirsGetResponses[keyof GetPirsPirsGetResponses];

export type AddPirPirsPostData = {
    body: PirBase;
    path?: never;
    query?: never;
    url: '/pirs';
};

export type AddPirPirsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddPirPirsPostError = AddPirPirsPostErrors[keyof AddPirPirsPostErrors];

export type AddPirPirsPostResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type DeletePirPirsPirIdDeleteData = {
    body?: never;
    path: {
        pir_id: string;
    };
    query?: never;
    url: '/pirs/{pir_id}';
};

export type DeletePirPirsPirIdDeleteErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeletePirPirsPirIdDeleteError = DeletePirPirsPirIdDeleteErrors[keyof DeletePirPirsPirIdDeleteErrors];

export type DeletePirPirsPirIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeletePirPirsPirIdDeleteResponse = DeletePirPirsPirIdDeleteResponses[keyof DeletePirPirsPirIdDeleteResponses];

export type GetPirPirsPirIdGetData = {
    body?: never;
    path: {
        pir_id: string;
    };
    query?: never;
    url: '/pirs/{pir_id}';
};

export type GetPirPirsPirIdGetErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetPirPirsPirIdGetError = GetPirPirsPirIdGetErrors[keyof GetPirPirsPirIdGetErrors];

export type GetPirPirsPirIdGetResponses = {
    /**
     * Successful Response
     */
    200: Pir;
};

export type GetPirPirsPirIdGetResponse = GetPirPirsPirIdGetResponses[keyof GetPirPirsPirIdGetResponses];

export type GetProxiesProxiesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/proxies';
};

export type GetProxiesProxiesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<Proxy>;
};

export type GetProxiesProxiesGetResponse = GetProxiesProxiesGetResponses[keyof GetProxiesProxiesGetResponses];

export type AddProxyProxiesPostData = {
    body: ProxyBase;
    path?: never;
    query?: never;
    url: '/proxies';
};

export type AddProxyProxiesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddProxyProxiesPostError = AddProxyProxiesPostErrors[keyof AddProxyProxiesPostErrors];

export type AddProxyProxiesPostResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type QueryProxyProxiesQueryGetData = {
    body?: never;
    path?: never;
    query: {
        proxy_name: string;
    };
    url: '/proxies/query';
};

export type QueryProxyProxiesQueryGetErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type QueryProxyProxiesQueryGetError = QueryProxyProxiesQueryGetErrors[keyof QueryProxyProxiesQueryGetErrors];

export type QueryProxyProxiesQueryGetResponses = {
    /**
     * Successful Response
     */
    200: Array<Proxy>;
};

export type QueryProxyProxiesQueryGetResponse = QueryProxyProxiesQueryGetResponses[keyof QueryProxyProxiesQueryGetResponses];

export type DeleteProxyProxiesProxyIdDeleteData = {
    body?: never;
    path: {
        proxy_id: string;
    };
    query?: never;
    url: '/proxies/{proxy_id}';
};

export type DeleteProxyProxiesProxyIdDeleteErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteProxyProxiesProxyIdDeleteError = DeleteProxyProxiesProxyIdDeleteErrors[keyof DeleteProxyProxiesProxyIdDeleteErrors];

export type DeleteProxyProxiesProxyIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteProxyProxiesProxyIdDeleteResponse = DeleteProxyProxiesProxyIdDeleteResponses[keyof DeleteProxyProxiesProxyIdDeleteResponses];

export type GetProxyProxiesProxyIdGetData = {
    body?: never;
    path: {
        proxy_id: string;
    };
    query?: never;
    url: '/proxies/{proxy_id}';
};

export type GetProxyProxiesProxyIdGetErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetProxyProxiesProxyIdGetError = GetProxyProxiesProxyIdGetErrors[keyof GetProxyProxiesProxyIdGetErrors];

export type GetProxyProxiesProxyIdGetResponses = {
    /**
     * Successful Response
     */
    200: Proxy;
};

export type GetProxyProxiesProxyIdGetResponse = GetProxyProxiesProxyIdGetResponses[keyof GetProxyProxiesProxyIdGetResponses];

export type ReplaceProxyProxiesProxyIdPutData = {
    body: ProxyBase;
    path: {
        proxy_id: string;
    };
    query?: never;
    url: '/proxies/{proxy_id}';
};

export type ReplaceProxyProxiesProxyIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ReplaceProxyProxiesProxyIdPutError = ReplaceProxyProxiesProxyIdPutErrors[keyof ReplaceProxyProxiesProxyIdPutErrors];

export type ReplaceProxyProxiesProxyIdPutResponses = {
    /**
     * Created
     */
    201: unknown;
    /**
     * Successful Response
     */
    204: void;
};

export type ReplaceProxyProxiesProxyIdPutResponse = ReplaceProxyProxiesProxyIdPutResponses[keyof ReplaceProxyProxiesProxyIdPutResponses];

export type UpdateProxyStatusProxiesProxyIdStatusPutData = {
    body?: never;
    path: {
        proxy_id: string;
    };
    query: {
        enabled: boolean;
    };
    url: '/proxies/{proxy_id}/status';
};

export type UpdateProxyStatusProxiesProxyIdStatusPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateProxyStatusProxiesProxyIdStatusPutError = UpdateProxyStatusProxiesProxyIdStatusPutErrors[keyof UpdateProxyStatusProxiesProxyIdStatusPutErrors];

export type UpdateProxyStatusProxiesProxyIdStatusPutResponses = {
    /**
     * Successful Response
     */
    200: Proxy;
};

export type UpdateProxyStatusProxiesProxyIdStatusPutResponse = UpdateProxyStatusProxiesProxyIdStatusPutResponses[keyof UpdateProxyStatusProxiesProxyIdStatusPutResponses];

export type PingProxyProxiesProxyIdPingPutData = {
    body?: never;
    path: {
        proxy_id: string;
    };
    query?: never;
    url: '/proxies/{proxy_id}/ping';
};

export type PingProxyProxiesProxyIdPingPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PingProxyProxiesProxyIdPingPutError = PingProxyProxiesProxyIdPingPutErrors[keyof PingProxyProxiesProxyIdPingPutErrors];

export type PingProxyProxiesProxyIdPingPutResponses = {
    /**
     * Successful Response
     */
    200: Proxy;
};

export type PingProxyProxiesProxyIdPingPutResponse = PingProxyProxiesProxyIdPingPutResponses[keyof PingProxyProxiesProxyIdPingPutResponses];

export type CreateApiKeyKeysPostData = {
    body?: never;
    path?: never;
    query: {
        user_name: string;
    };
    url: '/keys';
};

export type CreateApiKeyKeysPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateApiKeyKeysPostError = CreateApiKeyKeysPostErrors[keyof CreateApiKeyKeysPostErrors];

export type CreateApiKeyKeysPostResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type DeleteApiKeyKeysUserNameDeleteData = {
    body?: never;
    path: {
        user_name: string;
    };
    query?: never;
    url: '/keys/{user_name}';
};

export type DeleteApiKeyKeysUserNameDeleteErrors = {
    /**
     * Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteApiKeyKeysUserNameDeleteError = DeleteApiKeyKeysUserNameDeleteErrors[keyof DeleteApiKeyKeysUserNameDeleteErrors];

export type DeleteApiKeyKeysUserNameDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteApiKeyKeysUserNameDeleteResponse = DeleteApiKeyKeysUserNameDeleteResponses[keyof DeleteApiKeyKeysUserNameDeleteResponses];

export type ClientOptions = {
    baseUrl: (string & {});
};